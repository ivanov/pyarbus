[ ] right now, some of what we do is cached in memory (thanks to the
    one-time-properties)
    
[ ] it'd be nice to use joblib to store computations on disk
        - this might make sense for the computation expensive parts, not for just
        reading ascii data by itself
    
[ ] what about computing saccades using different algorithms, and caching those
    results, so as to be able to quickly switch between them?
    
[ ] API Docs building, as well as a proper manual
    
[ ] Examples of customized extensions via subclassing of Eye and Eyelink classes
    (like I did for JoV paper)
    
[ ] EDF format reader (direct, without going through edf2ascii)
    
[x] add a ./CONTRIBUTING.md

[x] make a website

[ ] buildbot status grabbed async from webserver (like the travis badges)

[x] sample data shipped with pyarbus - provide simple api for using it

[ ] debian package uploaded to neurodebian

[ ] simple ASCII parser (that takes columns) (leverage numpy.loadtxt)

[ ] scan path viz (using an epoch)

[ ] rich repr for visualizing an object

[ ] incorporate code from Marianne Maertens for event extraction

[ ] python3 compliance (has to start with nitime)

[ ] coveralls.io integration (with the buildbot) 

[ ] put up on the cheeseshop
